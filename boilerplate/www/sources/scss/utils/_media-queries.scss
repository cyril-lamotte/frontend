// =============================================================================
// Breakpoints
// =============================================================================

// Breakpoints map
// Defined in _variables.scss
$breakpoints: '';


// -----------------------------------------------------------------------------
// Media Queries
// -----------------------------------------------------------------------------

/// Add a "max-width" mediaquerie
///
/// @name mq-to (max-width)
/// @param {String} $breakpoint ['sm'] - Breakpoint
/// @requires {Map} $breakpoints
/// @group rwd
/// @example scss Usage
/// div {
///   @include mq-to( 'sm' );
/// }
@mixin mq-to($breakpoint: 'sm') {

  @if map-has-key($breakpoints, $breakpoint) {
    @media only screen and (max-width: (map-get($breakpoints, $breakpoint)-1) /16 * 1em) {
      @content;
    }
  }

  @else {
    @warn "Please make sure `#{$breakpoint}` is defined in `$breakpoints` map.";
  }
}



/// Add a "min-width" mediaquerie
///
/// @name mq-from (min-width)
/// @param {String} $breakpoint ['sm'] - Breakpoint
/// @requires {Map} $breakpoints
/// @group rwd
/// @example scss Usage
/// div {
///   @include mq-from( 'sm' );
/// }
@mixin mq-from($breakpoint) {

  @if map-has-key($breakpoints, $breakpoint) {
    @media only screen and (min-width: (map-get($breakpoints, $breakpoint)) /16 * 1em) {
      @content;
    }
  }

  @else {
    @warn "Please make sure `#{$breakpoint}` is defined in `$breakpoints` map.";
  }
}



/// Add a "min-width" & "max-width" mediaquerie
///
/// @name mq-from-to (min-width & max-width)
/// @param {String} $breakpoint-from ['sm'] - Starting breakpoint
/// @param {String} $breakpoint-to ['md'] - Ending breakpoint
/// @requires {Map} $breakpoints
/// @group rwd
/// @example scss Usage
/// div {
///   @include mq-from-to( 'sm', 'md' );
/// }
@mixin mq-from-to($breakpoint-from: 'sm', $breakpoint-to: 'md') {

  @if not map-has-key($breakpoints, $breakpoint-from) {
    @warn "Please make sure `#{$breakpoint-from}` is defined in `$breakpoints` map.";
  }

  @if not map-has-key($breakpoints, $breakpoint-to) {
    @warn "Please make sure `#{$breakpoint-from}` is defined in `$breakpoints` map.";
  }

  @if $breakpoint-from == '' {

    @media only screen and (max-width: (map-get($breakpoints, $breakpoint-to))/16 * 1em) {
      @content;
    }

  }

  @else if $breakpoint-to == '' {

    @media only screen and (min-width: (map-get($breakpoints, $breakpoint-from)) /16 * 1em) {
      @content;
    }

  }

  @else {

    @media only screen and (min-width: (map-get($breakpoints, $breakpoint-from)) /16 * 1em) and (max-width: (map-get($breakpoints, $breakpoint-to)-1) /16 * 1em) {
      @content;
    }

  }

}


