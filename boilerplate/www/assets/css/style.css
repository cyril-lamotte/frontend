/* =============================================================================
   Grid
============================================================================= */
/* -----------------------------------------------------------------------------
   @Font-face
----------------------------------------------------------------------------- */
/* -----------------------------------------------------------------------------
   Headings
----------------------------------------------------------------------------- */
/*@mixin page-title {

}*/
input[type="checkbox"] {
  vertical-align: middle;
  margin: 0;
  padding: 0;
  width: 13px;
  height: 13px; }

input[type="radio"] {
  vertical-align: middle;
  margin: 0;
  padding: 0;
  width: 13px;
  height: 13px; }

/* -----------------------------------------------------------------------------
   Reset
----------------------------------------------------------------------------- */
/* =============================================================================
   Box sizing
============================================================================= */
html {
  box-sizing: border-box; }

*,
*:before,
*:after {
  box-sizing: inherit; }

/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/* =============================================================================
   Images
============================================================================= */
/**
 * 1. Fluid images for responsive purposes.
 * 2. Offset `alt` text from surrounding copy.
 */
img {
  max-width: 100%;
  /* [1] */
  font-style: italic;
  /* [2] */
  height: auto; }

/* -----------------------------------------------------------------------------
   Helpers
----------------------------------------------------------------------------- */
/* =============================================================================
   Helpers
============================================================================= */
/* -----------------------------------------------------------------------------
   Display
----------------------------------------------------------------------------- */
.is-hidden {
  display: none; }

.visually-hidden {
  position: absolute !important;
  clip: rect(1px, 1px, 1px, 1px);
  padding: 0 !important;
  border: 0 !important;
  height: 1px !important;
  width: 1px !important;
  overflow: hidden; }

/* -----------------------------------------------------------------------------
   Visibility
----------------------------------------------------------------------------- */
.visible-xs {
  display: none !important; }

.visible-sm {
  display: none !important; }

.hidden-md {
  display: none !important; }

.visible-md {
  display: inherit !important; }

@media only screen and (min-width: 768px) and (max-width: 991px) {
  .hidden-md {
    display: inherit !important; }
  .visible-md {
    display: none !important; }
  .visible-sm {
    display: inherit !important; }
  .hidden-sm {
    display: none !important; } }

@media only screen and (max-width: 767px) {
  .hidden-md {
    display: inherit !important; }
  .visible-md {
    display: none !important; }
  .visible-xs {
    display: inherit !important; }
  .hidden-xs {
    display: none !important; } }

/* -----------------------------------------------------------------------------
   Alignments
----------------------------------------------------------------------------- */
.align-left {
  text-align: left !important; }

.align-right {
  text-align: right !important; }

.align-center {
  text-align: center !important; }

.valign-top {
  vertical-align: top !important; }

.valign-middle {
  vertical-align: middle !important; }

.valign-bottom {
  vertical-align: bottom !important; }

.align-start {
  float: left; }

.align-end {
  float: right; }

.align-clear {
  clear: both; }

/* -----------------------------------------------------------------------------
   Custom
----------------------------------------------------------------------------- */
/* =============================================================================
   Basics
============================================================================= */
/* -----------------------------------------------------------------------------
   Interactions
----------------------------------------------------------------------------- */
/* Selection */
::-moz-selection {
  background-color: #0066ff;
  color: #fff; }
::selection {
  background-color: #0066ff;
  color: #fff; }

::-moz-selection {
  background-color: #0066ff;
  color: #fff; }

/* Tap focus color */
html {
  -webkit-tap-highlight-color: rgba(0, 102, 255, 0.5); }

/* -----------------------------------------------------------------------------
   Body
----------------------------------------------------------------------------- */
html {
  font: 0.625em/1.5 "Arial", "Helvetica", sans-serif;
  color: #333;
  margin: 0; }

body {
  font-size: 1.2rem; }

/* -----------------------------------------------------------------------------
   Default link's style
----------------------------------------------------------------------------- */
a {
  color: #333;
  text-decoration: none; }
  a:hover, a:focus, a:active {
    text-decoration: underline; }
  a:focus img {
    outline: 1px dashed #0066ff; }

/* =============================================================================
   Layout
============================================================================= */
/* -----------------------------------------------------------------------------
   Wrappers
----------------------------------------------------------------------------- */
.wrapper {
  max-width: 1200px;
  margin: 0 auto; }

/* =============================================================================
   Forms default
============================================================================= */
/* =============================================================================
   Header
============================================================================= */
.main-header:after {
  content: "";
  display: table;
  clear: both; }

/* =============================================================================
   Footer
============================================================================= */
.main-footer:after {
  content: "";
  display: table;
  clear: both; }

/* =============================================================================
   Nav
============================================================================= */
/* =============================================================================
   Breadcrumb
============================================================================= */
/* =============================================================================
   Print
============================================================================= */
@media print {
  * {
    background-image: none !important;
    box-shadow: none !important;
    text-shadow: none !important; }
  body {
    width: auto !important;
    margin: auto !important;
    font-family: serif;
    font-size: 10px;
    background-color: #fff !important; }
  /* no orphans, no widows */
  p,
  blockquote {
    orphans: 3;
    widows: 3; }
  h1,
  h2,
  h3,
  caption {
    page-break-after: avoid; }
  blockquote,
  ul,
  ol {
    page-break-inside: avoid; }
  a {
    color: #000 !important;
    text-decoration: underline !important; } }

/*# sourceMappingURL=data:application/json;base64, */
